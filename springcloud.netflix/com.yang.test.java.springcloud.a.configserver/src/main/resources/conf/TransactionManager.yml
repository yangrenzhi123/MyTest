server:
  port: 7970
eureka:
  client:
    healthcheck:
      enabled: true
    service-url:
      defaultZone: http://eureka:123456@localhost:8761/eureka
  instance:
    lease-renewal-interval-in-seconds: 5 # ，表示eureka client发送心跳给server端的频率。如果在leaseExpirationDurationInSeconds后，server端没有收到client的心跳，则将摘除该instance。除此之外，如果该instance实现了HealthCheckCallback，并决定让自己unavailable的话，则该instance也不会接收到流量。默认30秒
    lease-expiration-duration-in-seconds: 15 #表示eureka server至上一次收到client的心跳之后，等待下一次心跳的超时时间，在这个时间内若没收到下一次心跳，则将移除该,默认为90秒,如果该值太大，则很可能将流量转发过去的时候，该instance已经不存活了。如果该值设置太小了，则instance则很可能因为临时的网络抖动而被摘除掉。该值至少应该大于leaseRenewalIntervalInSeconds
    prefer-ip-address: true
    ip-address: 127.0.0.1
spring:
  jpa:
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    hibernate: 
      ddl-auto: update
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.8.70:3306/tx-manager?useUnicode=true&characterEncoding=UTF-8&useSSL=false&allowMultiQueries=true&allowPublicKeyRetrieval=true&serverTimezone=GMT%2B8
    username: root
    password: 123456
    validationQuery: SELECT 1
    testWhileIdle: true
    testOnBorrow: true
    testOnReturn: false
  redis:
    host: 192.168.8.70
    port: 6379
    pool: 
      maxActive: 10
      maxWait: -1
      maxIdle: 5
      minIdle: 0
      timeout: 0
#  redis:
#    cluster:
#      nodes: 192.168.10.228:27001,192.168.10.228:27002,192.168.10.228:27003,192.168.10.229:27004,192.168.10.229:27005,192.168.10.229:27006
#    lettuce:
#      pool:
#        max-active: 1000  #连接池最大连接数（使用负值表示没有限制）
#        max-idle: 10 # 连接池中的最大空闲连接
#        min-idle: 5 # 连接池中的最小空闲连接
#        max-wait: -1 # 连接池最大阻塞等待时间（使用负值表示没有限制）
#  redis:
#    password: 123456
#    sentinel:
#      master: mymaster
#      nodes: 172.17.153.247:26379,172.17.153.254:26379,172.17.153.244:26379